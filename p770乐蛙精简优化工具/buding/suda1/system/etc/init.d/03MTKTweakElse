#!/system/bin/sh

############################
# MtkTweak_V14 For MTK6577 #
#       作者:cx9208        #
#   吾就爱智能荣誉出品     #
#  此脚本为其他的优化项目  #
############################

LOG_FILE=/data/MtkTweak.log
LOG_FILE_SQL=/data/MtkTweak_sqlite.log
LogcatOF=`cat /system/MTLogcatOF`;
ZipalignOF=`cat /system/MTZipalignOF`;
ZIPALIGNDB=/data/MtkTweak_zipalign.db;
ButtomLightOF=`cat /system/MTButtomLightOF`;
RUN_EVERY=604800;
CURRDATE=`date +%s`
APKDIR=/data/app;

echo "" | tee -a $LOG_FILE
echo "--> 开始共有的优化" | tee -a $LOG_FILE
echo "" | tee -a $LOG_FILE

#FS Kernel调整
echo "524288" > /proc/sys/fs/file-max
echo "32000" > /proc/sys/fs/inotify/max_queued_events
echo "256" > /proc/sys/fs/inotify/max_user_instances
echo "10240" > /proc/sys/fs/inotify/max_user_watches
echo "10" > /proc/sys/fs/lease-break-time
echo "1048576" > /proc/sys/fs/nr_open
sysctl -e -w kernel.panic=0;
sysctl -e -w kernel.random.write_wakeup_threshold=128;
sysctl -e -w kernel.random.read_wakeup_threshold=64;
echo "0" > /proc/sys/kernel/sched_child_runs_first
sysctl -w kernel.threads-max=525810;
sysctl -w kernel.sched_child_runs_first=0;

#IO、SD卡优化、修改默认调速器、文件系统调整
DM=`ls -d /sys/block/dm-*`;
LOOP=`ls -d /sys/block/loop*`;
MMC=`ls -d /sys/block/mmc*`;
for i in $LOOP $MMC $DM;
do
    echo "0" > $i/queue/rotational;
	echo "0" > $i/queue/iostats;
    echo "512" > $i/queue/read_ahead_kb;
	echo "512" > $i/queue/nr_requests;
	echo "1" > $i/queue/nomerges;
done

echo "2048" > /sys/devices/virtual/bdi/179:0/read_ahead_kb;
echo "1024" > /sys/devices/virtual/bdi/179:8/read_ahead_kb;
echo "1024" > /sys/devices/virtual/bdi/179:32/read_ahead_kb;
echo "1024" > /sys/devices/virtual/bdi/179:64/read_ahead_kb;
echo "1024" > /sys/devices/virtual/bdi/179:96/read_ahead_kb;
echo "1024" > /sys/devices/virtual/bdi/default/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:0/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:1/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:2/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:3/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:4/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:5/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:6/read_ahead_kb;
echo "128" > /sys/devices/virtual/bdi/7:7/read_ahead_kb;
echo "97" > /sys/devices/virtual/bdi/179:0/max_ratio;
echo "97" > /sys/devices/virtual/bdi/default/max_ratio;

#IPV4优化、3G优化、防止SYN攻击
echo "0" > /proc/sys/net/ipv4/tcp_timestamps;
echo "1" > /proc/sys/net/ipv4/tcp_tw_reuse;
echo "1" > /proc/sys/net/ipv4/tcp_sack;
echo "1" > /proc/sys/net/ipv4/tcp_tw_recycle;
echo "1" > /proc/sys/net/ipv4/tcp_window_scaling;
echo "5" > /proc/sys/net/ipv4/tcp_keepalive_probes;
echo "30" > /proc/sys/net/ipv4/tcp_keepalive_intvl;
echo "30" > /proc/sys/net/ipv4/tcp_fin_timeout;
sysctl -e -w net.ipv4.tcp_congestion_control=cubic;
sysctl -e -w net.ipv4.conf.all.accept_redirects=0;
sysctl -e -w net.ipv4.conf.all.accept_source_route=0;
sysctl -e -w net.ipv4.conf.all.secure_redirects=0;
sysctl -e -w net.ipv4.conf.default.secure_redirects=0;
sysctl -e -w net.ipv4.conf.default.accept_source_route=0;
sysctl -e -w net.ipv4.conf.default.accept_redirects=0;
ECHO 32768 > /proc/sys/net/core/rmem_default;
ECHO 65536 > /proc/sys/net/core/rmem_max;
ECHO 32768 > /proc/sys/net/core/wmem_default;
ECHO 65536 > /proc/sys/net/core/wmem_max;
ECHO 1024 > /proc/sys/net/core/somaxconn;
ECHO 3000 > /proc/sys/net/core/netdev_max_backlog;
ECHO "4096 32768 65536" > /proc/sys/net/ipv4/tcp_rmem;
ECHO "4096 32768 65536" > /proc/sys/net/ipv4/tcp_wmem;
setprop ro.ril.enable.fd.plmn.prefix 23402,23410,23411;
setprop ro.ril.hsxpa 2;
setprop ro.ril.hsupa.category 5;
setprop ro.ril.enable.dtm 1;
setprop ro.ril.enable.a53 1;
setprop ro.ril.enable.3g.prefix 1;
setprop ro.ril.gprsclass 10;
setprop ro.ril.enable.3g.prefix 1;
busybox sysctl -e -w net.ipv4.tcp_syncookies=1;
busybox sysctl -e -w net.ipv4.conf.all.rp_filter=1;
busybox sysctl -e -w net.ipv4.conf.default.rp_filter=1;
busybox sysctl -e -w net.ipv4.tcp_synack_retries=2;
busybox sysctl -e -w net.ipv4.tcp_syn_retries=2;
busybox sysctl -e -w net.ipv4.tcp_max_syn_backlog=1024;
busybox sysctl -e -w net.ipv4.tcp_max_tw_buckets=16384;
busybox sysctl -e -w net.ipv4.icmp_echo_ignore_all=1;
busybox sysctl -e -w net.ipv4.icmp_ignore_bogus_error_responses=1;
busybox sysctl -e -w net.ipv4.tcp_no_metrics_save=1;
busybox sysctl -e -w net.ipv4.tcp_fin_timeout=15;
busybox sysctl -e -w net.ipv4.tcp_keepalive_intvl=30;
busybox sysctl -e -w net.ipv4.tcp_keepalive_probes=5;
busybox sysctl -e -w net.ipv4.tcp_keepalive_time=1800;
busybox sysctl -e -w net.ipv4.ip_forward=0;

#改善MTK录像画质、音质
setprop ro.media.enc.hprof.vid.bps 3900000;
setprop ro.media.enc.mprof.vid.bps 1100000;
setprop ro.media.enc.lprof.vid.bps 500000;
setprop ro.media.enc.hprof.aud.hz 48000;
setprop ro.media.enc.mprof.aud.hz 16000;
setprop ro.media.enc.lprof.aud.hz 8000;
setprop ro.media.enc.hprof.aud.bps 96000;
setprop ro.media.enc.mprof.aud.bps 64000;
setprop ro.media.enc.lprof.aud.bps 32000
setprop ro.media.enc.jpeg.quality 100;

#触摸、UI流畅性调整
setprop ro.min_pointer_dur 10;
setprop persist.sys.ui.hw 1;
setprop windowsmgr.max_events_per_sec 300;
setprop ro.max.fling_velocity 8000;
setprop ro.min.fling_velocity 7000;
setprop persist.sys.scrollingcache 2;
setprop persist.sys.purgeable_assets 1;
setprop touch.presure.scale 0.001;
mount -t debugfs none /sys/kernel/debug;
ECHO NO_NORMALIZED_SLEEPER > /sys/kernel/debug/sched_features 2>/dev/null
ECHO NO_GENTLE_FAIR_SLEEPERS > /sys/kernel/debug/sched_features 2>/dev/null
ECHO NO_NEW_FAIR_SLEEPERS > /sys/kernel/debug/sched_features 2>/dev/null
echo 1152 > /dev/cpuctl/fg_boost/cpu.shares 2>/dev/null
echo 1024 > /dev/cpuctl/cpu.shares 2>/dev/null
echo 1152 > /dev/cpuctl/user/cpu.shares 2>/dev/null

#zipalign对齐
if [ $ZipalignOF = "true" ]; then

if [ ! -f $ZIPALIGNDB ]; then
    APKDIR=/system/app;
	touch $ZIPALIGNDB;
fi;

echo "--> 全自动Zipalign开始" | tee -a $LOG_FILE

for DIR in $APKDIR ; do
  cd $DIR
  for APK in *.apk ; do
    if [ $APK -ot $ZIPALIGNDB ] && [ $(grep "$DIR/$APK" $ZIPALIGNDB|wc -l) -gt 0 ] ; then
      echo "-此APK已经对齐过: $DIR/$APK" | tee -a $LOG_FILE
    else
      zipalign -c 4 $APK
      if [ $? -eq 0 ] ; then
        echo "-此APK已经对齐过: $DIR/$APK" | tee -a $LOG_FILE
        grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
      else
        echo "-开始处理: $DIR/$APK" | tee -a $LOG_FILE
        zipalign -f 4 $APK /cache/$APK
        busybox mount -o rw,remount /system
        cp -f -p /cache/$APK $APK
        busybox rm -f /cache/$APK
        grep "$DIR/$APK" $ZIPALIGNDB > /dev/null || echo $DIR/$APK >> $ZIPALIGNDB
      fi
    fi
  done
done
busybox mount -o ro,remount /system
touch $ZIPALIGNDB
echo "--> 全自动Zipalign结束"| tee -a $LOG_FILE

else
echo "--> 全自动Zipalign关"| tee -a $LOG_FILE

fi

if [ -e $LOG_FILE_SQL ]; then
    LASTRUN=`stat -t $LOG_FILE_SQL | awk '{print $14}'`
else
    LASTRUN=0
fi;

INTERVAL=$(expr $CURRDATE - $LASTRUN)

if [ $INTERVAL -gt $RUN_EVERY ];
then
    if [ -e $LOG_FILE_SQL ]; then
        rm $LOG_FILE_SQL;
    fi;
        
    echo "数据库整理开始 时间： $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOG_FILE_SQL;
    echo "--每隔一周进行一次" | tee -a $LOG_FILE_SQL;

    for i in `busybox find /d* -iname "*.db"`; do
        /system/xbin/sqlite3 $i 'REINDEX;';
        resIndex=$?
        if [ $resIndex == 0 ]; then
            resIndex="成功";
        else
            resIndex="错误代码-$resIndex";
        fi;
        echo "数据库 $i  整理：$resIndex" | tee -a $LOG_FILE_SQL;
    done
      
    echo "数据库整理结束 时间： $( date +"%m-%d-%Y %H:%M:%S" )" | tee -a $LOG_FILE_SQL;
fi;

#清理垃圾、阻止垃圾生成
if [ "$LogcatOF" = "false" ]; then
rm /dev/log/main;
rm -r /data/local/tmp/*
rm -r /data/tmp/*
rm -r /data/system/usagestats/*
rm -r /data/system/appusagestats/*
rm -r /data/system/dropbox/*
rm -r /data/tombstones/*
rm -r /data/anr/*
busybox chmod 000 /data/system/userbehavior.db;
busybox chmod 000 /data/system/usagestats/;
busybox chmod 000 /data/system/dropbox/;
busybox chmod 000 /data/anr/;
busybox chmod 000 /data/tombstones/;
busybox chmod 000 /data/system/appusagestats/;

else
echo "--> 允许Log与LogCat生成"| tee -a $LOG_FILE
busybox chmod 777 /data/system/userbehavior.db;
busybox chmod 777 /data/system/usagestats/;
busybox chmod 777 /data/system/dropbox/;
busybox chmod 777 /data/anr/;
busybox chmod 777 /data/tombstones/;
busybox chmod 777 /data/system/appusagestats/;
fi;

#电池寿命提升
setprop ro.ril.disable.power.collapse 0;
setprop pm.sleep_mode 1;
setprop wifi.supplicant_scan_interval 30;

#键盘灯
if [ "$ButtomLightOF" = "true" ]; then
chmod 644 /sys/class/leds/button-backlight/brightness
echo "--> 键盘灯开"| tee -a $LOG_FILE
else
echo 0 > /sys/class/leds/button-backlight/brightness
chmod 466 /sys/class/leds/button-backlight/brightness
echo "--> 键盘灯关"| tee -a $LOG_FILE
fi

sleep 50

#低内存杀手阈值调整
chmod 777 /sys/module/lowmemorykiller/parameters/minfree;
echo "2048,4096,8192,16384,24576,32768" > /sys/module/lowmemorykiller/parameters/minfree;

echo "--> 全部优化结束-时间： $( date +"%H:%M:%S" )" | tee -a $LOG_FILE

#版本：V14 全部完成！